
%M2P1
h1=1;   
h2=1;   
Um1=7; % taux prodcution max de machine M1
Um2=3; % taux prodcution max de machine M2
d=2.7;   % taux de demande
A=0.3;
dr=A*d;  % taux de produit fini issu du remanufacturing
C=0.5;
dcr=C*d;
B=0.01;
drej=B*dcr;  % taux disposal max
dm=d-dr;
rho=0.01;	
cp1=6;	% cout inventaire x1 et x2
cm1=150;  % cout pénurie x1
cm2=30; % cout pénurie x2
cr1=10;  % cout reparation machine M1
cr2=10;  % cout reparation machine M2
cp=2;  % cout disposal

xmin1=-10;
xmax1=50;

xmin2=-5; 
xmax2=40;

Nx1=1+((xmax1-xmin1)/h1);
Nx2=1+((xmax2-xmin2)/h2);

q12=1/50; %taux de panne machine M2
q13=1/100;  %taux de panne machine M1
q21=1/20;  %taux de réparation machine M2
q31=1/10;  %taux de réparation machine M1

q24=q13;  %taux de panne machine M1
q34=q12;  %taux de panne machine M2
q42=q31;  %taux de réparation machine M1
q43=q21;  %taux de réparation machine M2

cont1=[];
cont2=[];
cont3=[];
cont4=[];

% initialisation

UU1=[];
UU2=[];
xx1=[];
xx2=[];
VA1=[];
VA2=[];
VA3=[];
VA4=[];
VP1M=[]; 
VP2M=[];
VP3M=[]; 
VP4M=[]; 

% variable decision production M1
UU1(1)=0;
UU1(2)=4;
UU1(3)=Um1;
% variable decision production M2
UU2(1)=0;
UU2(2)=dr ;
UU2(3)=Um2;

Vp1=zeros(Nx1,Nx2);
Vp2=zeros(Nx1,Nx2);
Vp3=zeros(Nx1,Nx2);
Vp4=zeros(Nx1,Nx2);
VA1=zeros(Nx1,Nx2) ;
VA2=zeros(Nx1,Nx2);
VA3=zeros(Nx1,Nx2) ;
VA4=zeros(Nx1,Nx2);

Err=100000; precis=1;
it=0; 
pi1=(q21*q31)/((q21+q12)*(q31+q13)); %faire le calcul ici
pi2=(q21*q13)/((q21+q12)*(q31+q13));
Pi3=(q31*q12)/((q21+q12)*(q31+q13));

%Test de faisabilité
faisabilite=pi1*(Um1+Um2)+pi1*Um1+pi2*Um2;

if (faisabilite<=d)
    
   disp("Notre système ne peut satisfaire la demande")
   
else
    
   disp("sytème peut satisfaire la demande")
   
for i=1:Nx1
    for j=1:Nx2
        cont1(i,j)=0;
        cont2(i,j)=0;
        cont3(i,j)=0;
        cont4(i,j)=0;
    end
end


while (Err> precis)  %boucle d'itération
    
    Er=0;
    C1MAX=0;  C1MIN=5e+10;
    it=it+1;
    
    %
    %  Policy evaluation
    %
    
for i=1:Nx1
    x1=xmin1+(i-1)*h1;
    xx1(i)=x1;
    
    for j=1:Nx2
        x2=xmin2+(j-1)*h2;
        xx2(j)=x2;
        u1=cont1(i,j);  %production M1 
        u2=cont2(i,j);  %production M2
        
[Va11,Va21,Va31,Va41]=countm2p2(i,j,x1,x2,h1,h2,u1,u2,drej,dr,dm,q12,q13,q21,q24,q31,q34,q42,q43,Vp1,Vp2,Vp3,Vp4,Nx1,Nx2,rho,cp1,cm1,cm2,cr1,cr2,cp);


VA1(i,j)=Va11;
VA2(i,j)=Va21;
VA3(i,j)=Va31;
VA4(i,j)=Va41;


            if abs(VA1(i,j)-Vp1(i,j))>C1MAX
                C1MAX=abs(VA1(i,j)-Vp1(i,j));
            end
            
            if abs(VA1(i,j)-Vp1(i,j))< C1MIN
                C1MIN=abs(VA1(i,j)-Vp1(i,j));
            end
            
            if abs(VA2(i,j)-Vp2(i,j))>C1MAX
                C1MAX=abs(VA2(i,j)-Vp2(i,j));
            end
            
            if abs(VA2(i,j)-Vp2(i,j))<C1MIN
                C1MIN=abs(VA2(i,j)-Vp2(i,j));
            end
            
            if abs(VA3(i,j)-Vp3(i,j))>C1MAX
                C1MAX=abs(VA3(i,j)-Vp3(i,j));
            end
            
            if abs(VA3(i,j)-Vp3(i,j))<C1MIN
                C1MIN=abs(VA3(i,j)-Vp3(i,j));
            end
            
            if abs(VA4(i,j)-Vp4(i,j))>C1MAX
                C1MAX=abs(VA4(i,j)-Vp4(i,j));
            end
            
            if abs(VA4(i,j)-Vp4(i,j))<C1MIN
                C1MIN=abs(VA4(i,j)-Vp4(i,j));
            end

    
    end % end de for j=1: policy evaluation
end % end de for i=1: policy evaluation
     

     vmin=(rho/(1-rho))*C1MIN;
     vmax=(rho/(1-rho))*C1MAX;
     Err=abs(vmin-vmax)
     
     Vp1=VA1;
     Vp2=VA2;
     Vp3=VA3;
     Vp4=VA4; 
     
     
% policy improvement

V1_op=5e+10;
V2_op=5e+10;
V3_op=5e+10;
V4_op=5e+10;

for i=1:Nx1 
    x1=xmin1+(i-1)*h1; 
    xx1(i)=x1;
for j=1:Nx2 
    x2=xmin2+(j-1)*h2; 
    xx2(j)=x2;
    VP1M=1000000;
    VP2M=1000000;
    VP3M=1000000;
    VP4M=1000000;
    
for c1=1:3 %machine 1
    u1=UU1(c1); 

    for c2=1:3 %machine 2
        u2=UU2(c2); 
     
[Va11,Va21,Va31,Va41]=countm2p2(i,j,x1,x2,h1,h2,u1,u2,drej,dr,dm,q12,q13,q21,q24,q31,q34,q42,q43,Vp1,Vp2,Vp3,Vp4,Nx1,Nx2,rho,cp1,cm1,cm2,cr1,cr2,cp);

if Va11<VP1M
VP1M = Va11;
cont1(i,j)=u1;
cont2(i,j)=u2;

end

if Va21<VP2M
VP2M = Va21;
cont3(i,j)=u1;

end

if Va31<VP3M
VP3M = Va31;
cont4(i,j)=u2;

end

if Va41<VP4M
VP4M = Va41;

end

if Va11<V1_op
V1_op=Va11;
X11_op=x1;
X21_op=x2;
end

if Va21<V2_op
V2_op=Va21;
X12_op=x1;
end

if Va31<V3_op
V3_op=Va31;
X23_op=x1;
end


if Va41<V4_op
V4_op=Va41;
end
    end % for c2
        end % for c1

VA1(i,j)=VP1M;
VA2(i,j)=VP2M;
VA3(i,j)=VP3M;
VA4(i,j)=VP4M;

end % for j=x1 policy improv
end % for i=x1 policy improv.
end % iteration while
end 

% HPP_X11=X11_op
% HPP_X21=X21_op
% HPP_X22=X12_op
% HPP_X13=X23_op
% [r,c] = find(VA3==min(min(VA3(:,:)))) Permet de trouver le numéro de 
% ligne et de colonne qui donne la fonction valeur.

%% %% %% %% %% %% %% %% %% %% %% %% %% %% %% %% %% %% %% %% %% %% %% %% %% %% %% %% %% % 
xxx1=[];
xxx2=[];
cont11=[];
cont22=[];

for i=1:Nx1
    for j=1:Nx2
        cont11(i,j)=0;
        cont22(i,j)=0;
        cont33(i,j)=0;
        
    end
end

for i=1:Nx1 
    x1=xmin1+(i-1)*h1; 
    xxx1(i)=x1;
    
        
for j=1:Nx2 
    x2=xmin2+(j-1)*h2; 
    xxx2(j)=x2;
    
     if x1<=29
      cont11(i,j)=0.7; 
     else 
%          if x1<29.5
%           cont11(i,j)=0.65; 
%          else
            cont11(i,j)=0; 
%          end 
     end
     
     if x2<29
      cont22(i,j)=0.65; 
     else 
            cont22(i,j)=0;   
     end
end
end 
cr=30;
cd=150;
creb=30;
ci=10;
u=0.7;
beta=0.15;
cout=[];
for L=1:1:21
VECTEUR_COUT1(L)=0;
FRACT1(L)=0;
FRACT2(L)=0;
end
for N=1:1:21
    f=(N-1)/20;
    VECTEUR_COUT1(N)=(ci*u+creb*u*beta-cd*beta*u)*f*f+cd*beta*u;
    FRACT1(N)=f;
end 
% figure(00)
% plot(FRACT1,VECTEUR_COUT1)
% xlabel ('FRACT')
% ylabel('v(1,x)')
% title ('Value function at mode 1')
% grid on




% figure(11)
%     mesh(xxx2,xxx1,cont11)
%     xlabel ('Stock (x2)')
%     ylabel ('Stock (x1)')
%     zlabel ('Production rate of 1 M1 ')
%     title('Taux de production M1 en mode 1')
%     grid on
%  figure(22)
%     mesh(xxx2,xxx1,cont22)
%     xlabel ('x2')
%     ylabel ('x1')
%     zlabel ('Production rate of 1 M2 ')
%     title('Taux de production M2 en mode 1')
%     grid on
    
    figure(33)
plot(xxx1, cont11)
xlabel ('Stock (x1)')
ylabel('u1(1,x1)')
title('Production rate from machine 1 to mode 1')
grid on
  figure(44)
plot(xxx2, cont22)
xlabel ('Stock (x2)')
ylabel('u2(1,x2)')
title('Production rate from machine 1 to mode 1')
grid on  
    
    figure(1)
%     mesh(xx2,xx1,cont1)
%     xlabel ('x2')
%     ylabel ('x1')
%     title('Taux de production M1 en mode 1')
%     grid on
%     
%     figure(2)
%     mesh(xx2,xx1,cont2)
%     xlabel ('x2')
%     ylabel ('x1')
%     title('Taux de production M2 en mode 1')
%     grid on
%     
%     figure(3)
%     mesh(xx2,xx1,cont3)
%     xlabel ('x2')
%     ylabel ('x1')
%     title('Taux de production M1 en mode 2')
%     grid on
    

    
    figure(4)
%     mesh(xx2,xx1,cont4)
%     xlabel ('x2')
%     ylabel ('x1')
%     title('Taux de production M2 en mode 3')
%     grid on
%      
%     figure(5)
%     mesh(xx2,xx1,VA1)
%     xlabel ('x2')
%     ylabel ('x1')
%     zlabel ('Fonction valeur au mode 1)')
%     grid on
%     
%     figure(6)
%     mesh(xx2,xx1,VA2)
%     xlabel ('Stock(x2)')
%     ylabel ('Stock (x1)')
%     zlabel ('Function value in mode 1')
%     title ('Fonction valeur au mode 2)')
%     grid on
% 
%     figure(7)
%     mesh(xx2,xx1,VA3)
%     xlabel ('x2')
%     ylabel ('x1')
%     title ('Fonction valeur au mode 3)')
%     grid on
% 
%     figure(8)
%     mesh(xx2,xx1,VA4)
%     xlabel ('x2')
%     ylabel ('x1')
%     zlabel ('Fonction valeur au mode 4)')
%     grid on
